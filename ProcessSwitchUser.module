<?php
/**
 * Switch User Account (0.0.6)
 * Allows specific users to login as any other user account
 * 
 * @author Peter Burlingham
 * 
 * ProcessWire 2.x
 * Copyright (C) 2011 by Ryan Cramer
 * Licensed under GNU/GPL v2, see LICENSE.TXT
 * 
 * http://www.processwire.com
 * http://www.ryancramer.com
 * 
 */

class ProcessSwitchUser extends Process implements Module, ConfigurableModule {

	public function init() {
		parent::init();

		$this->addHookAfter("Page::editable", $this, 'checkpermission');
		$this->addHookAfter("Page::addable", $this, 'checkpermission');
		$this->addHookAfter("Page::viewable", $this, 'checkpermission');

		// Check if user selected in dropdown can see admin. If not, hide option of where to login to
		if($this->config->ajax && $this->input->get->userid) {
			$this->users->get((int)$this->input->get->userid)->roles;
			$loginUser = $this->users->get((int)$this->input->get->userid);
			if ($loginUser instanceof User) {
				if ($loginUser->hasPermission('page-edit')) {
					echo "show";
				} else {
					echo "hide";
				}
			}
			exit;
		}
	}

	public function ___execute() {
		// Are we allowed to use this module?
		if (!$this->user->get('id=' . $this->who_can_use)) {
			$this->error(__('You do not have permission to switch user accounts'));
			$this->session->redirect($this->pages->get(2)->url);
		}

		if ($this->input->post->switch) {
			if (!$this->input->post->select_user) {
				$this->error(__('You must select a user to switch to'));
			} else {
				$this->session->forceLogin($this->users->get($this->input->post->select_user));
				if ((int)$this->input->post->redirect == 1 && $this->pages->get(2)->viewable()) {
					$this->message(__('You are now logged in as ') . $this->user->name);
					$this->session->redirect($this->pages->get(2)->url);
				} else {
					$this->session->redirect($this->pages->get(1)->url);
				}
			}
		}

		if (!$this->switch_users && !$this->switch_roles) {
			$this->error(__('You must select at least one user or role to be able to switch to below before you can switch user'));
			$this->session->redirect($this->pages->get(2)->url . 'module/edit?name=' . __CLASS__);
		}

		$form = $this->modules->get('InputfieldForm');

		$field = $this->modules->get('InputfieldSelect');
		$field->attr('id+name', 'select_user');
		$field->label = __('Log in as');
		$matches = array();
		$this->switch_users ? $matches[] = '(id=' . implode('|', $this->switch_users) . ')' : '';
		$this->switch_roles ? $matches[] = '(roles=' . implode('|', $this->switch_roles) . ')' : '';
		foreach ($this->users->find(implode(',', $matches) . ', id!=' . $this->user . ', sort=name') as $user) {
			$field->addOption($user->id, $user->name);
		}
		$field->columnWidth = 50;
		$form->add($field);

		$field = $this->modules->get('InputfieldRadios');
		$field->name = 'redirect';
		$field->label = __('After login, redirect to...');
		// The below note theoretically shouldn't be needed as admin users need page-edit permission by default
		//$field->notes = __('If Admin is selected and user does not have permission to view the admin, you will be redirected to the homepage instead.');
		$field->addOption(1, 'Admin');
		$field->addOption(2, 'Homepage');
		$field->attr('value', 1);
		$field->columnWidth = 50;
		$field->optionColumns = 1;
		$field->required = true;
		$form->add($field);

		$field = $this->modules->get('InputfieldSubmit');
		$field->attr('id+name', 'switch');
		$field->attr('value', 'Switch User');
		$form->add($field);

		return $form->render();
	}

	public function checkPermission($event) {
		$page = $event->object;
		if ($page->process == 'ProcessSwitchUser' && !$this->user->matches('id=' . implode('|', $this->who_can_use))) {
			$event->return = false;
		}
	}

	public function ___install() {
		$parent = $this->pages->get(2)->child('name=setup');
		$page = new Page;
		$page->template = 'admin';
		$page->parent = $parent;
		$page->name = 'switch-user';
		$page->title = __('Switch User');
		$page->process = __CLASS__;
		$page->save();
	}

	public function ___uninstall() {
		$switchPage = $this->pages->get(2)->child('name=setup')->child('name=switch-user');
		if ($switchPage->id) {
			$this->pages->get(2)->child('name=setup')->child('name=switch-user')->delete();
		}
	}

}